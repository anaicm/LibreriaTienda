// <auto-generated />
using System;
using LibreriaTienda.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibreriaTienda.Server.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    partial class LibreriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibreriaTienda.Entidades.Autor", b =>
                {
                    b.Property<Guid>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorId");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Libro", b =>
                {
                    b.Property<Guid>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibroId");

                    b.HasIndex("AutorId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Libros", (string)null);
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Pedido", b =>
                {
                    b.Property<Guid>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CantidadTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Libro", b =>
                {
                    b.HasOne("LibreriaTienda.Entidades.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId");

                    b.HasOne("LibreriaTienda.Entidades.Pedido", "Pedido")
                        .WithMany("Libros")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Autor");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Pedido", b =>
                {
                    b.HasOne("LibreriaTienda.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("LibreriaTienda.Entidades.Pedido", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
